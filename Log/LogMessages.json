[
  {
    "code": "None",
    "message": "Unknown error: {0}"
  },
  {
    "code": "AdjustPullRequestPublishState",
    "message": "Pull request publish state should be adjusted to get correct change files."
  },
  {
    "code": "NoPublishedFilesInPullRequest",
    "message": "No file in change log has state added, modified or renamed."
  },
  {
    "code": "UpdateTraceInfoFailed",
    "message": "Update trace info failed for repo: {0} in step {1}."
  },
  {
    "code": "ElapsedTime",
    "message": "Step '{0}' finished in '{1}' ms."
  },
  {
    "code": "SetOpenToPublicGitRepositoryUrl",
    "message": "Using '{0}' as the url of the git repository open to public contributors"
  },
  {
    "code": "PublishedThemeToDHS",
    "message": "Published of theme file '{0}' to document hosting service, locale {1}, theme name {2}, branch name {3}"
  },
  {
    "code": "PublishedToDHS",
    "message": "Published of document '{0}' to document hosting service: {1}, locale {2}, depot name {3}, branch name {4}"
  },
  {
    "code": "RunExternalBuild",
    "message": "Run external build for project: {0}, targets: {1}, properties: {2}"
  },
  {
    "code": "InnerRawLogFile",
    "message": "Inner raw log file details: {0}"
  },
  {
    "code": "PsScriptNotExist",
    "message": "Powershell script file: {0} does not exist. No need to run"
  },
  {
    "code": "NoNeedToRunExternalBuildStep",
    "message": "No need to run External build step"
  },
  {
    "code": "IgnoreStubContributorInformation",
    "message": "Cannot find contributor information for {0} of docset {1}. Ignore stubbing"
  },
  {
    "code": "StartStubContributorInformation",
    "message": "Stubbing contributor information for {0} of docset {1}"
  },
  {
    "code": "EndStubContributorInformation",
    "message": "Contributor information is stubbed for {0} of docset {1}: author {2}, update date: {3}"
  },
  {
    "code": "AbortStubContributorInformation",
    "message": "Cannot find content node {0}. Abort stubbing"
  },
  {
    "code": "SyncGit",
    "message": "Syncing git: {0}"
  },
  {
    "code": "ForcePublish",
    "message": "Force publish request for repository '{0}', build id '{1}', action '{2}'. Force: '{3}'"
  },
  {
    "code": "EnableIncrementalBuild",
    "message": "Incremental build is '{3}' for repository '{0}', build id '{1}', action '{2}'"
  },
  {
    "code": "EnableIncrementalPostProcessing",
    "message": "Incremental postprocessing is '{3}' for repository '{0}', build id '{1}', action '{2}'"
  },
  {
    "code": "ValidatePublishRequest",
    "message": "Validating publish request for repository '{0}', build id '{1}', action '{2}'"
  },
  {
    "code": "CommitIdOverwrittenInPublishRequest",
    "message": "Commit id in publish request is overwritten with '{0}'."
  },
  {
    "code": "PullRequestSourceRepoAccessToken",
    "message": "Using access token from user id '{0}' for source repository '{1}' in pull request '{2}' to target repository '{3}'"
  },
  {
    "code": "SyncDownloadPowershellScript",
    "message": "Entry point script downloaded to {0}"
  },
  {
    "code": "SyncUsingConfiguration",
    "message": "Using configuration for sync operation: {0}"
  },
  {
    "code": "ServiceVersionAndEnvironment",
    "message": "Build service version: {0}, worker deployment id: {1}, instance id: {2}, correlation id: {3}"
  },
  {
    "code": "NormalizeToc",
    "message": "Normalizing toc file: '{0}'."
  },
  {
    "code": "NormalizeContent",
    "message": "Normalizing contents file: '{0}'."
  },
  {
    "code": "ProcessingDocset",
    "message": "Current docset in processing: '{0}' in output subfolder '{1}'."
  },
  {
    "code": "WorkflowRequestProcessing",
    "message": "Current workflow request in processing: {0}"
  },
  {
    "code": "PublishToDHSCacheMiss",
    "message": "[CacheMiss] '{0}' published to DHS: {1}, locale {2}, depot name {3}, branch name {4}"
  },
  {
    "code": "PublishToDHSCacheHit",
    "message": "[CacheHit] '{0}' publishing's skipped because no change since last publishing:  locale: {1}, depot name: {2}, branch name: {3}"
  },
  {
    "code": "PublishToDHSCacheError",
    "message": "[CacheError] Error occurred with operation '{0}': key: {0}, error: {1}"
  },
  {
    "code": "PublishToDHSCacheInsert",
    "message": "[CacheInsert] Cache item '{0}' inserted: type: {1}, key: {2}, hash: {3}"
  },
  {
    "code": "PublishToDHSCacheDelete",
    "message": "[CacheDelete] Cache item deleted: key: {0}"
  },
  {
    "code": "UsingManifest",
    "message": "Using manifest: {0}"
  },
  {
    "code": "UsingAccessTokenInAccessTokenList",
    "message": "Using access token from access token list, hash of the access token: {0}"
  },
  {
    "code": "UsingUser",
    "message": "Using user: {0}"
  },
  {
    "code": "UsingServiceAccountInServiceAccountList",
    "message": "Using service account from service account list: {0}"
  },
  {
    "code": "UsingUserIdInServiceAccountList",
    "message": "Using user id from service account list: {0}"
  },
  {
    "code": "UsingAccessTokenToResolveUserProfile",
    "message": "Using access token to resolve user profile, hash of the access token: {0}"
  },
  {
    "code": "CanNotDeleteProtectedBranch",
    "message": "Protected branch {0} can't be deleted in OPS. Its published contents will still be visible on publishing site. Please restore the deleted branch to the same commit id before it is deleted. All protected branches: {1}."
  },
  {
    "code": "CanNotPushToProtectedBranch",
    "message": "Push to protected branch {0} is not permitted in repository {1}. You must unprotect this branch and try again. {2}"
  },
  {
    "code": "CanNotGetSourceBranchName",
    "message": "Can't get source branch name for this publish and report generation will fail. Additional Information: {0}."
  },
  {
    "code": "DeleteBranchSucceeded",
    "message": "Delete branch: '{0}' of docset '{1}' succeeded."
  },
  {
    "code": "NoDepotNeedBranchDelete",
    "message": "No depot need to delete branch '{0}' of repository '{1}'."
  },
  {
    "code": "ThemeBranchNoNeedToDelete",
    "message": "Theme {0} doesn't have branch {1}. No need to delete."
  },
  {
    "code": "StepInfo",
    "message": "Start Step : {0}"
  },
  {
    "code": "BranchNotExistsInDHS",
    "message": "Branch '{0}' of depot '{1}' does not exist in DHS. Possible reason: 1. Last publish operation isn't successful; 2. The branch is already deleted."
  },
  {
    "code": "PublishingFallbackToBranch",
    "message": "Publishing fallback to branch '{0}'."
  },
  {
    "code": "PublishingFallbackBranchDoesNotExistInDHS",
    "message": "Fallback branch '{0}' of depot '{1}' does not exist in DHS. Ignore the fallback branch and do a full publishing."
  },
  {
    "code": "PublishingFallbackIgnoredBecauseSiteDoesNotSupport",
    "message": "Publishing site '{0}' of depot '{1}' does not support branch fallback. Ignore the fallback branch and do a full publishing."
  },
  {
    "code": "SyncRequest",
    "message": "Initializing sync request for sync pair {0}: from repo {1} branch {2} (working branch {3}) to repo {4} branch {5} (working branch {6}), sync strategy {7}"
  },
  {
    "code": "SyncSkippedDueToUnprocessableRequest",
    "message": "Sync operation is skipped for sync pair {0} (repo {1}/syncing branch {2}; repo {3}/syncing branch {4}; forward sync status {5}, backward sync status {6}; latest sync direction {7}) due to unprocessable request: {8}"
  },
  {
    "code": "SyncSkippedDueToSyncStatus",
    "message": "Sync operation is skipped for sync pair {0} (repo {1}/syncing branch {2}; repo {3}/syncing branch {4}; forward sync status {5}, backward sync status {6}; latest sync direction {7}) due to latest sync status: {8}"
  },
  {
    "code": "SyncSkippedDueToSyncStrategy",
    "message": "Sync operation is skipped for sync pair {0} (from repo {1} branch {2}) due to sync strategy {3}"
  },
  {
    "code": "SyncSkippedDueToDummyMergeCommit",
    "message": "Sync operation is skipped for sync pair {0} (from repo {1} branch {2}) because the merge commit {3} contains no actual change."
  },
  {
    "code": "WorkflowSubMessageDispatched",
    "message": "Submessage dispatched in workflow message processor: index {0}, submessage id {1}, category {2}"
  },
  {
    "code": "ThemeManifestNotExist",
    "message": "Build manifest file of Theme {0} does not exist. Details: {1}"
  },
  {
    "code": "ManifestNotExist",
    "message": "Build manifest file of docset {0} does not exist. Please check the publish configuration. Details: {1}"
  },
  {
    "code": "ManifestItemDependencyIsInvalid",
    "message": "Build manifest item dependency is invalid with key: {0} and value: {1} in manifest file: {2}"
  },
  {
    "code": "ManifestItemHasBothHtmlAndRawPage",
    "message": "Build manifest item for '{0}' has both HTML and raw page: ignore {1}"
  },
  {
    "code": "InvalidTypeMapping",
    "message": "Type mapping in docset {0} is invalid"
  },
  {
    "code": "InvalidManifest",
    "message": "Manifest json file '{0}' is invalid. Details: {1}"
  },
  {
    "code": "InvalidJsonLogLine",
    "message": "The log line content '{0}' can't be converted to log item. Details: {1}"
  },
  {
    "code": "InvalidDependentListFileLine",
    "message": "The line in dependent list file '{0}' cannot be parsed as dependency info. Details: {1}"
  },
  {
    "code": "InvalidTocNode",
    "message": "Toc node with title: '{0}', relative path '{1}', href '{2}' is invalid. Please make sure the node link does not exceed the docset. Reference error message: {3}"
  },
  {
    "code": "DocsetInformationNotFound",
    "message": "Cannot find docset information for repository: {0} and docset name: {1}. Please make sure the docset is correctly provisioned"
  },
  {
    "code": "DocsetPavedOver",
    "message": "Docset {0} in repository {1} is paved over. Please restore the docset to reenable publish"
  },
  {
    "code": "DocsetDeletedInDHS",
    "message": "Docset {0} in repository {1} is deleted in DHS. Please reprovision that to publish or delete the corresponding docset configuration in .openpublishing.publish.config.json file"
  },
  {
    "code": "NoDocsetProvisioned",
    "message": "No provisioned docset found in repository {0}. Please provision or restore the docsets if you want to build them"
  },
  {
    "code": "DocsetProvisionedLocaleAndLocaleInGitRepositoryConflict",
    "message": "Use provisioned locale {0} for docset {1} instead of locale {2} in publish configuration"
  },
  {
    "code": "NoDocumentPublished",
    "message": "No document is published"
  },
  {
    "code": "NoPdfPublished",
    "message": "No pdf is published"
  },
  {
    "code": "PublishPdfPublished",
    "message": "publish pdf of current docset : '{0}' was failed with detail: '{1}'"
  },
  {
    "code": "AuthorInformationNotFound",
    "message": "Cannot find author information for specified name '{0}' for file {1}"
  },
  {
    "code": "DirtyWorkspace",
    "message": "The workspace is not clean. Details: {0}"
  },
  {
    "code": "ReinitializeWorkspace",
    "message": "Reinitializing workspace (#{0} retry)... "
  },
  {
    "code": "CannotGetIncrementalInfoForDocset",
    "message": "Can't get incremental information from build manifest for docset {0}."
  },
  {
    "code": "CopyFromCachedWorkspace",
    "message": "Copying workspace from local cache directory '{0}'... "
  },
  {
    "code": "CheckCachedWorkspace",
    "message": "Checking cached workspace from local cache directory '{0}'... "
  },
  {
    "code": "SyncPullRequestCreated",
    "message": "Pull request is opened from branch '{0}' to '{1}' in repository '{2}'. Please resume sync operation by merging the pull request: {3}."
  },
  {
    "code": "SyncPullRequestCreationFailedUsingUserId",
    "message": "Failed to open pull request using user id {0}: {1}."
  },
  {
    "code": "SyncPullRequestAlreadyExists",
    "message": "Pull request already exists from branch '{0}' to '{1}' in repository '{2}'. Please resume sync operation by merging the pull request: {3}."
  },
  {
    "code": "WorkflowNoSubMessageToHandle",
    "message": "No submessage is generated by workflow request handlers for message {0}."
  },
  {
    "code": "WorkflowNoRequestHandlerFound",
    "message": "No workflow request handlers are available to process workflow requests for message {0}."
  },
  {
    "code": "BackendEngineExceptionError",
    "message": "An exception occurred during the build process. Please check the raw log and retry building your content again. If the issue persists, please open a ticket in http://SiteHelp and include the URL of publishing report."
  },
  {
    "code": "BackendEngineExceptionDetailedError",
    "message": "An exception occurred during the build process, exception details: {0}"
  },
  {
    "code": "InvalidJsonFileContent",
    "message": "Invalid syntax in {0}. Please validate your syntax with a JSON validator like http://jsonlint.com/ and update the json file in the repo with a correct syntax"
  },
  {
    "code": "WorkflowTaskTimedOut",
    "message": "The build process timed out when executing workflow task {0} with following error message: {1}. Please retry building your content again. If the issue still happens, open a ticket in http://SiteHelp and include the URL of publishing report."
  },
  {
    "code": "MissingFiles",
    "message": "Some file missing: {0}"
  },
  {
    "code": "InvalidReference",
    "message": "Reference is invalid: {0}"
  },
  {
    "code": "InvalidRelativePath",
    "message": "Relative path {0} is invalid, most likely because {0} is above the docset root. Processing file {1}"
  },
  {
    "code": "ManifestNotSupported",
    "message": "{0} is not supported in publish and also is not defined in mapping types"
  },
  {
    "code": "DuplicateDocsetOutputFolder",
    "message": "Some docset configuration inside publish config has same output folder. Same output folder: {0}"
  },
  {
    "code": "DuplicateLogCodes",
    "message": "Log codes of Error/Warning/Info in publish config file have duplicate value. Duplicate values: {0}."
  },
  {
    "code": "NormalizeFailed",
    "message": "This error message is shown because some errors happened when normalize Content or TOC. Possible reasons. 1: Some documents after build are still malformed xml, can't be shown on OP website. Please ref the other errors to check your content to see if there's any invalid html tag. 2. Some toc files normalized failed. That may be because toc file contains invalid charactors, please ref the other toc normalized errors to fix. Otherwise, please open a ticket in http://SiteHelp."
  },
  {
    "code": "NormalizeTocError",
    "message": "Normalize toc file {0} Error. Error: {1}"
  },
  {
    "code": "NormalizeTocFailed",
    "message": "Normalize toc file {0} failed. Error: {1}"
  },
  {
    "code": "NormalizeArticleFailed",
    "message": "Normalize file reference for file {0} failed. Error: {1}"
  },
  {
    "code": "NormalizeImageFailed",
    "message": "Normalize image reference for file {0} failed. Error: {1}"
  },
  {
    "code": "PublishThemeToDHSFailed",
    "message": "Publishing of theme file '{0}' to document hosting service failed with asset id: {1} locale: {2}, theme name: {3}, branch name: {4}. Error: {5}"
  },
  {
    "code": "PublishToDHSFailed",
    "message": "Publishing of document '{0}' to document hosting service failed with asset id: {1} locale: {2}, depot name: {3}, branch name: {4}. Error: {5}"
  },
  {
    "code": "PublishToDHSFailedAtOpenReadStream",
    "message": "Publishing of document '{0}' failed at SafeOpenReadStream with relative path: {1}. Error: {2}"
  },
  {
    "code": "GetDocumentsFromDHSFailed",
    "message": "Getting documents from document hosting service failed with locale: {0}, depot name: {1}, branch name: {2}. Error: {3}"
  },
  {
    "code": "GetBranchFromDHSResult",
    "message": "Getting branch from document hosting service: branch {0} exists in depot {1}, locale {2} - {3}."
  },
  {
    "code": "GetDocumentsFromDHSResult",
    "message": "Getting documents from document hosting service: {0} files exist in depot {1}, branch {2}, locale {3} currently."
  },
  {
    "code": "GetMonikersFromDHSFailed",
    "message": "Getting monikers from document hosting service failed."
  },
  {
    "code": "DeleteDocumentFromDHS",
    "message": "Deletion of document from document hosting service with asset id: {0}, uri: {1}, locale: {2}, depot name: {3}, branch name: {4}, moniker: {5}, moniker_range: {6}."
  },
  {
    "code": "DeleteDocumentFromDHSFailed",
    "message": "Deletion of document from document hosting service failed with asset id: {0}, uri: {1}, locale: {2}, depot name: {3}, branch name: {4}, moniker: {5}, moniker_range: {6}. Error: {7}"
  },
  {
    "code": "RunExternalBuildFailed",
    "message": "Build project {0}, target {1}, properties {2} failed: {3}"
  },
  {
    "code": "ReadBuildLogFailed",
    "message": "Error when reading build logs of project {0}, target {1}: {2}"
  },
  {
    "code": "RunPsScriptFailed",
    "message": "Run script {0} with arguments: {1} failed: {2}"
  },
  {
    "code": "RunPsScriptFriendlyFailed",
    "message": "Run script failed with no detailed information. Please retry building your content again. If the issue still happens, open a ticket in http://SiteHelp and include the error report for our team to troubleshoot"
  },
  {
    "code": "ResolveContributorInformationFailed",
    "message": "Error when resolving contributor information for file {0}: {1}"
  },
  {
    "code": "PullRequestMergeConflict",
    "message": "Cannot sync git repo to specified state. Please make sure the pull request is mergeable. Details: {0}"
  },
  {
    "code": "SyncGitCheckoutFailure",
    "message": "{0}. Please check first your git repository to make sure that there are no duplicate folder names. Then if the error still happens, please open a ticket in http://SiteHelp."
  },
  {
    "code": "FileNameConflict",
    "message": "Prepare of repository data failed. Proposal: {0}. After fix, please try the build again."
  },
  {
    "code": "GitBranchDeleted",
    "message": "Cannot sync git repo because branch {0} has been deleted."
  },
  {
    "code": "GitBranchDeletedOrForcePushed",
    "message": "Cannot sync git repo to specified commit because branch {0} has been deleted or has been force pushed: {1}"
  },
  {
    "code": "GitRepoUnauthorizedWithSourceCommit",
    "message": "{0}. It looks like this might be the first time you’ve submitted a pull request from your fork into this repo. Before you can run builds in a pull request, you have to enable your GitHub account in OPS by visiting {1}. After you enable your account, close and then reopen this pull request to start another build."
  },
  {
    "code": "GitRepoUnauthorizedWithoutSourceCommit",
    "message": "Unauthorized to sync git repostiory: {0}."
  },
  {
    "code": "GitRepoNotFound",
    "message": "Repository does not exist: {0}."
  },
  {
    "code": "RepositoryInformationNotFound",
    "message": "Cannot find repository information for {0}. Please make sure the repository is correctly provisioned"
  },
  {
    "code": "RepositoryIdNotFound",
    "message": "Cannot find repository id with repository url {0}."
  },
  {
    "code": "SyncInvalidMessageCustomData",
    "message": "Invalid message custom data for sync operation: {0}"
  },
  {
    "code": "SyncPairInformationNotFound",
    "message": "Cannot find sync pair information for pair id {0}. Please make sure the sync pair is correctly provisioned"
  },
  {
    "code": "SyncRepoIndexInformationNotFound",
    "message": "Cannot find sync index information for repository {0}. Please make sure the repository is correctly provisioned for syncing"
  },
  {
    "code": "SyncBlockedDueToBranchConflict",
    "message": "Sync operation is blocked for sync pair {0} because there is conflict in branch '{1}' and branch '{2}' of repository '{3}'. Please resolve the conflict first and resume syncing by merging the pull request."
  },
  {
    "code": "SyncReportNotFoundOrInvalid",
    "message": "Cannot find sync report or the report format is invalid: {0}"
  },
  {
    "code": "SyncErrorCreatingPullRequest",
    "message": "Cannot create pull request for syncing job {0}. Possible reason is the target repo has no common history with the source repo. please open a ticket in http://SiteHelp with the detailed message: {1}"
  },
  {
    "code": "CannotMergeCommit",
    "message": "Cannot merge commit {0} in branch {1} of repository {2} into branch {3} (commit {4})"
  },
  {
    "code": "MsBuildNotFound",
    "message": "Cannot locate msbuild in following folders: {0}"
  },
  {
    "code": "InvalidBuildToolConfigFile",
    "message": "Build tool's config file: {0} is not valid. Exception: {1}"
  },
  {
    "code": "BuildTableEntityNotFound",
    "message": "Cannot find build table entity for repository {0} and build {1}"
  },
  {
    "code": "PackageBlobDownloadTimeout",
    "message": "Package blob download time out in {0} seconds. url: {1}. Please try again later."
  },
  {
    "code": "PackageBlobUploadTimeout",
    "message": "Package blob upload time out in {0} seconds. url: {1}. Please try again later."
  },
  {
    "code": "BuildIndexTableEntityNotFound",
    "message": "Build with repository Id '{0}', commit Id '{1}' and branch name '{2}' is not found"
  },
  {
    "code": "RepositoryTableEntityNotFound",
    "message": "Cannot find repository table entity for repository {0}"
  },
  {
    "code": "RepositoryStatesTableEntityNotFound",
    "message": "Cannot find repository states table entity for repository {0}"
  },
  {
    "code": "DocsetTableEntityNotFound",
    "message": "Cannot find docset table entity for repository {0} and docset {1}"
  },
  {
    "code": "UserTableEntityNotFound",
    "message": "Cannot find user table entity for user {0}"
  },
  {
    "code": "PullRequestTableEntityNotFound",
    "message": "Cannot find pull request table entity for repository {0} and pull request {1}"
  },
  {
    "code": "PullRequestIdIndexTableEntityNotFound",
    "message": "Cannot find pull request id index table entity for repository {0} and pull request {1}"
  },
  {
    "code": "SiteTableEntityNotFound",
    "message": "Cannot find site table entity for site name {0}"
  },
  {
    "code": "SyncPairTableEntityNotFound",
    "message": "Cannot find sync pair table entity for pair id {0}"
  },
  {
    "code": "SyncRepoIndexTableEntityNotFound",
    "message": "Cannot find sync repo index table entity for PK: {0}, RK: {1}"
  },
  {
    "code": "LatestProvisionTableEntityNotFound",
    "message": "Cannot find latest provision table entity for repository id {0}"
  },
  {
    "code": "ProvisionTableEntityNotFound",
    "message": "Cannot find provision table entity for repository id {0} and build id {1}"
  },
  {
    "code": "ThemeTableEntityNotFound",
    "message": "Cannot find theme table entity for theme id {0} and repository id {1}"
  },
  {
    "code": "ProjectFileNotFound",
    "message": "Cannot find project file '{0}"
  },
  {
    "code": "RepositoryTableEntityIsAlreadyDeleted",
    "message": "Repository table entity for repository {0} is already deleted"
  },
  {
    "code": "InvalidExternalBuildProperties",
    "message": "External build properties is not in valid format: {0}"
  },
  {
    "code": "UnrecognizedGitRepositoryType",
    "message": "Unrecognized git repository type {0}"
  },
  {
    "code": "UnrecognizedBuildType",
    "message": "Unrecognized build type {0}"
  },
  {
    "code": "MissingSourceGitCommit",
    "message": "Source git commit should be specified for pull request"
  },
  {
    "code": "PullRequestFromDifferentRepositoriesNotSupported",
    "message": "Pull request from different repositories on {0} is not supported"
  },
  {
    "code": "TocFileNotFound",
    "message": "Toc file content: {0} is not valid. Exception: {1}"
  },
  {
    "code": "PublishConfigFileNotFound",
    "message": "Publish service's config file: {0} is not found. Exception: {1}"
  },
  {
    "code": "PublishConfigFileNotFoundInDefaultBranch",
    "message": "Publish service's config file: {0} is not found in default branch {1}. Please make sure branch {1} exists in your repository and file {0} exists under the root."
  },
  {
    "code": "InvalidPublishConfigFile",
    "message": "Publish service's config file: {0} is not valid. Details: {1}"
  },
  {
    "code": "InvalidDocsetConfig",
    "message": "Docset config file: {0} is not valid. Exception: {1}"
  },
  {
    "code": "UnableToSaveSubMessagesToAzureTable",
    "message": "Cannot save submessages to Azure table:{0}. Message id: {1}"
  },
  {
    "code": "LocalAndRemoteGitRepositoryMismatch",
    "message": "Local directory '{0}' maps to Git repository '{1}'. Expected Git repository is '{2}"
  },
  {
    "code": "MessageCountMismatchTotalCount",
    "message": "Record count should match total count {0} for message {1}. Message count: {2}"
  },
  {
    "code": "MessageGeneratorError",
    "message": "Message generator '{0}' error: {1}"
  },
  {
    "code": "WorkflowMessageProcessingError",
    "message": "Workflow message processing error for message {0}: {1}"
  },
  {
    "code": "PullRequestStateInvalid",
    "message": "Pull request state {0} is not a valid state for repository {1} and pull request {2}"
  },
  {
    "code": "PullRequestNotFound",
    "message": "Cannot find pull request for repository {0} and pull request {1}. Exception: {2}"
  },
  {
    "code": "RedirectionLoopDetected",
    "message": "Redirection loop detected: {0}"
  },
  {
    "code": "RedirectionMultipleRedirectFrom",
    "message": "Multiple contents redirect to same content ({0}): {1}. Use content ({2}) as redirect from and ignore others."
  },
  {
    "code": "ChangeLogFileNotExists",
    "message": "Change log file doesn't exist for repository: {0}, expected blob path: {1}."
  },
  {
    "code": "ChangeLogFileInvalid",
    "message": "Change log file content is invalid for repository: {0}, blob path: {1}, Exception: {2}"
  },
  {
    "code": "ProgressNotSupportedAction",
    "message": "Action {0} is not supported for report build progress."
  },
  {
    "code": "DepotMonikers",
    "message": "Docset {0} has monikers. All monikers: {1}."
  },
  {
    "code": "NotSupportedPublishType",
    "message": "Publish type {0} is not supported now. Repository url: {1}."
  },
  {
    "code": "ServiceAccountBuildCommentsPermissionInsufficientWarning",
    "message": "Your service account {0} does not have 'Read' permission to this repo, so we used the fallback account {1}. To ensure your Builds will use the service account in the future, please grant that account 'Read' permission to this repo."
  },
  {
    "code": "ServiceAccountPRCommentsPermissionInsufficientWarning",
    "message": "Your service account {0} does not have 'Write' permission to this repo, so we used the fallback account {1}. To ensure your PRs will use the service account in the future, please grant that account 'Write' permission to this repo."
  },
  {
    "code": "PRCommentsPermissionInsufficientWarning",
    "message": "Neither service account {0} nor fallback account {1} have 'Write' permission to this repo. To ensure your PRs will not fail in the future, grant at least one of the accounts to the repo 'Write' permission."
  },
  {
    "code": "CancelBuild",
    "message": "Build with repository id '{0}' and build id '{1}' is canceled. Stop here."
  },
  {
    "code": "DeleteSourceTransferTableEntityFailed",
    "message": "Transfer repository succeeded with warning. Warning details: Delete source entity from {0} with key {1} failed."
  },
  {
    "code": "SkipDeleteSourceTransferTableEntity",
    "message": "Skip delete table entity from {0}. Because one of the following values null condition hit. TableAccessor: {1}; TableEntity: {2}; PartitionKey: {3}; RowKey: {4}."
  },
  {
    "code": "RedirectionInvalidRedirectUrl",
    "message": "Detected invalid redirect url '{0}'. Ignored when generating document id."
  },
  {
    "code": "RedirectionDifferentSiteName",
    "message": "Detected redirect url '{0}' of different site name from '{1}'. Ignored when generating document id."
  },
  {
    "code": "RedirectionDifferentBasePath",
    "message": "Detected redirect url '{0}' of different base path from '{1}'. Ignored when generating document id."
  },
  {
    "code": "RedirectionNonexistentRedirectUrl",
    "message": "Detected redirect url '{0}' points to a nonexistent document. Ignored when generating document id."
  },
  {
    "code": "ProvisionStepStart",
    "message": "The provision message process is starting the step {1}, message id {0}"
  },
  {
    "code": "ProvisionStepFinish",
    "message": "The provision message process is finishing the step {1}, message id {0}"
  },
  {
    "code": "NoWebHookCreate",
    "message": "Your account '{1}' does not need to create webhook for repository '{0}'"
  },
  {
    "code": "ThemeNotSupportPullRequest",
    "message": "Theme repository doesn't support pull request validation. Repository url: {0}, Publish Type: {1}."
  },
  {
    "code": "DeleteBranchFailed",
    "message": "Delete branch: '{0}' of docset '{1}' failed."
  },
  {
    "code": "BranchNotFound",
    "message": "Branch {0} of depot {1} can't be found in DHS, can't do preview of this branch."
  },
  {
    "code": "ThemeNotFound",
    "message": "Theme {0} of can't be found in DHS, can't do preview."
  },
  {
    "code": "UnauthorizedOAuthAccess",
    "message": "OAuth authentication credentials were missing or incorrect."
  },
  {
    "code": "UnauthorizedBasicAuthAccess",
    "message": "Authorization header was missing or not in the basic scheme format: Authorization: Basic <base64encodedvalue>"
  },
  {
    "code": "UnauthorizedClientAccessTokenAccess",
    "message": "Client Access Token header was missing or incorrect."
  },
  {
    "code": "InvalidParameter",
    "message": "Parameter has invalid value or missing required parameter, details: {0}"
  },
  {
    "code": "InvalidStringParameter",
    "message": "Cannot cast input value {0} to string"
  },
  {
    "code": "InvalidRepoIdParameter",
    "message": "{0} is not a valid repo id"
  },
  {
    "code": "InvalidBuildIdParameter",
    "message": "{0} is not a valid build id"
  },
  {
    "code": "InvalidRepositoryDependencyIdParameter",
    "message": "{0} is not a valid repository dependency id"
  },
  {
    "code": "InvalidDocsetIdParameter",
    "message": "{0} is not a valid docset id"
  },
  {
    "code": "InvalidDateTimeParameter",
    "message": "{0} is not a valid datetime of format {1}"
  },
  {
    "code": "InvalidRepositoryScope",
    "message": "{0} is not a valid repository scope, it should be Op, Git, All or Orphan, default is Op"
  },
  {
    "code": "InvalidRepositoryType",
    "message": "{0} is not a valid repository type, it should be Publish or Dependency, default is Publish"
  },
  {
    "code": "InvalidBasePath",
    "message": "{0} is not a valid base path of site name {1}"
  },
  {
    "code": "InvalidSiteName",
    "message": "{0} is not a valid site name"
  },
  {
    "code": "DocsetIdMismatch",
    "message": "Docset Ids mismatch between uri parameter and body"
  },
  {
    "code": "MissingVsoEvent",
    "message": "Vso event delivery body json doesn't contain attribute '{0}' or the value is empty"
  },
  {
    "code": "MissingGitHubEvent",
    "message": "GitHub event delivery header doesn't contain header '{0}' or the value is empty"
  },
  {
    "code": "VsoSignatureMismatch",
    "message": "Vso signature '{0}' didn't match"
  },
  {
    "code": "GitHubSignatureMismatch",
    "message": "GitHub signature '{0}' didn't match"
  },
  {
    "code": "UnauthorizedToGitRepo",
    "message": "User cannot access Git repo: {0}"
  },
  {
    "code": "MissingPartitionAttribute",
    "message": "Type {0} doesn't define Partition attribute"
  },
  {
    "code": "GitRepositoryAlreadyExists",
    "message": "Repostiory {0} under {1} account already exists"
  },
  {
    "code": "RepositoryTableEntityAlreadyExists",
    "message": "The repository {0} has already been created"
  },
  {
    "code": "DocsetTableEntityAlreadyExists",
    "message": "Docset with name '{0}' is already created in current repository"
  },
  {
    "code": "DocsetTableEntityConflictsWithBasePath",
    "message": "Docset with site base path '{0}' conflicts with another one with same docset name '{1}' but different site base path '{2}"
  },
  {
    "code": "DocsetTableEntityConflictsWithTenant",
    "message": "Docset with tenant '{0}' conflicts with another one with same docset name '{1}' but different tenant '{2}"
  },
  {
    "code": "InsertOrUpdateUserTableEntityFailed",
    "message": "Insert/Update user {0} to user table failed"
  },
  {
    "code": "InsertOrUpdateAuthenticationTableEntityFailed",
    "message": "Insert/Update user {0} to authentication table failed"
  },
  {
    "code": "InsertAuthenticationTableEntityFailed",
    "message": "Insert user {0} to authentication table failed"
  },
  {
    "code": "DeleteAuthenticationTableEntityFailed",
    "message": "Delete user {0} from authentication table failed"
  },
  {
    "code": "InsertOrUpdateUserAADInformationTableEntityFailed",
    "message": "Insert/Update user {0} to user add information table failed"
  },
  {
    "code": "InsertOrUpdateRepositoryTableEntityFailed",
    "message": "Insert/Update repository {0} to repository table failed"
  },
  {
    "code": "InsertOrUpdateRepositoryCreatorIndexTableEntityFailed",
    "message": "Insert/Update repository {0} to repository creator index table failed"
  },
  {
    "code": "InsertOrUpdateRepositoryStatesTableEntityFailed",
    "message": "Insert/Update repository {0} to repository states table failed"
  },
  {
    "code": "InsertOrUpdateDocsetTableEntityFailed",
    "message": "Insert/Update docset {0} to docset table failed"
  },
  {
    "code": "InsertOrUpdateDepotTableEntityFailed",
    "message": "Insert/Update depot {0} to depot table failed"
  },
  {
    "code": "InsertOrUpdateBuildTableEntityFailed",
    "message": "Insert/Update build {0} to build table failed"
  },
  {
    "code": "InsertOrUpdateBuildCommitIndexTableEntityFailed",
    "message": "Insert/Update build {0} to build commit index table failed"
  },
  {
    "code": "InsertOrUpdatePullRequestTableEntityFailed",
    "message": "Insert/Update pull request {0} to pull request table failed"
  },
  {
    "code": "InsertOrUpdatePullRequestCommitIndexTableEntityFailed",
    "message": "Insert/Update pull request {0} to pull request commit index table failed"
  },
  {
    "code": "InsertOrUpdateSyncPairTableEntityFailed",
    "message": "Insert/Update sync pair to sync pair table failed: repo1 id: {0}, repo1 syncing branch: {1}, repo2 id: {2}, repo2 syncing branch: {3}"
  },
  {
    "code": "InsertOrUpdateSyncRepoIndexTableEntityFailed",
    "message": "Insert/Update sync repo index table entity failed: repo id: {0}, sync pair id: {1}"
  },
  {
    "code": "InsertOrUpdateSyncTableEntityFailed",
    "message": "Insert/Update sync {0} to build table failed"
  },
  {
    "code": "InsertOrUpdateAuthenticationCacheFailed",
    "message": "Insert/Update user {0} to authentication cache failed"
  },
  {
    "code": "InsertOrUpdateSiteTableEntityFailed",
    "message": "Insert/Update site {0} to site table failed"
  },
  {
    "code": "InsertOrUpdateWorkflowMessageTableEntityFailed",
    "message": "Insert/Update message {0} to workflow message table failed"
  },
  {
    "code": "InsertOrUpdateWorkflowSubMessageTableEntityFailed",
    "message": "Insert/Update submessage {0} to workflow submessage table failed"
  },
  {
    "code": "InsertOrUpdateProvisionTableEntityFailed",
    "message": "Insert/Update repostiory {0} to provision table failed"
  },
  {
    "code": "InsertOrUpdateLatestProvisionTableEntityFailed",
    "message": "Insert/Update repostiory {0} to latest provision table failed"
  },
  {
    "code": "InsertOrUpdatePushNotificationTableEntityFailed",
    "message": "Insert/Update build {0} of repository {1} to push notification table failed"
  },
  {
    "code": "InsertOrUpdatePullRequestNotificationTableEntityFailed",
    "message": "Insert/Update pull request {0} of repository {1} to pull request notification table failed"
  },
  {
    "code": "DeleteRepositoryCreatorIndexTableEntityFailed",
    "message": "Delete repostiory {0} failed in repository creator index table"
  },
  {
    "code": "DeleteDepotTableEntityFailed",
    "message": "Delete repostiory {0} failed in depot table for depot {1}"
  },
  {
    "code": "UploadGitRepositoryInitializationFilesFailed",
    "message": "Uploading of provisioning initialization files to github/vso failed. Details: {0}"
  },
  {
    "code": "CreateGitRepositoryFailed",
    "message": "Failed to create git repository {0} under account {1} in {2}. You may need to delete it manually if you want to create with this name again. Details: {3}"
  },
  {
    "code": "CreateGitRepositoryWebHookFailed",
    "message": "User {0} doesn't have rights to provision the repository {1}, details: failed to create webhooks in Git repository: {1}"
  },
  {
    "code": "DeleteGitRepositoryWebHookFailed",
    "message": "User {0} doesn't have rights to provision the repository {1}, details: failed to delete webhooks in Git repository: {1}"
  },
  {
    "code": "UnrecognizedSiteName",
    "message": "SiteName '{0}' is not supported"
  },
  {
    "code": "DepotNotExist",
    "message": "Depot '{0}' doesn't exist in document hosting service"
  },
  {
    "code": "DocsetNamesNotFoundInPublishConfig",
    "message": "The following docset names do not exist in {0}: {1}"
  },
  {
    "code": "DocsetNamesDuplicatedInPublishConfig",
    "message": "The following docset names are listed multiple times: {0}"
  },
  {
    "code": "PermissionNotSufficient",
    "message": "User with id {0} does not have sufficient permission to perform the API request. Details: required permission '{1}', actual permission '{2}'. Hint: {3}"
  },
  {
    "code": "PermissionNotSufficientWithoutUserCredential",
    "message": "User without information does not have sufficient permission to perform the API request"
  },
  {
    "code": "PermissionNotSufficientForCreatingPrivateRepository",
    "message": "Your account '{1}' does not have sufficient permission to create private repository '{0}"
  },
  {
    "code": "UnrecognizedGitRepositoryPermissionType",
    "message": "Unrecognized git repository type {0}"
  },
  {
    "code": "UnrecognizedGitCommitType",
    "message": "Unrecognized git commit type {0}"
  },
  {
    "code": "BranchNotFoundInGitRepository",
    "message": "Branch {0} is not found in git repository {1}"
  },
  {
    "code": "BranchFilteredInDefaultBranchPublishConfig",
    "message": "Branch {0} is filtered in your git repository's publish config of {1} branch"
  },
  {
    "code": "NoUsefulTargetMappingInDefaultBranchPublishConfig",
    "message": "Branch {0} has no useful target in your git repository's publish config of {1} branch"
  },
  {
    "code": "InvalidTargetInDefaultBranchPublishConfig",
    "message": "Current build has invalid target '{0}' in your git repository's publish config of {1} branch"
  },
  {
    "code": "UnsupportedGitActivityEvent",
    "message": "Git activity event {0} of {1} is not supported"
  },
  {
    "code": "HttpsRequired",
    "message": "Https required for accessing Open Publishing Build Rest Api Service"
  },
  {
    "code": "UnsupportedProjectGetOperation",
    "message": "Only Vso supports get projects operation"
  },
  {
    "code": "UnsupportedRepositoryTeamsGetOperation",
    "message": "Only Github supports get repository teams operation"
  },
  {
    "code": "UnsupportedRepositoryTeamCreateOperation",
    "message": "Only Only supports create repository team operation"
  },
  {
    "code": "InvalidQueryCount",
    "message": "Build/Pull Request query count must be an integer of larger than 0 and smaller or equal than {0}"
  },
  {
    "code": "FailedToDispatchMessage",
    "message": "Dispatch message {0} failed, details: {1}"
  },
  {
    "code": "DocsetParameterForCreationNotProvided",
    "message": "Area, Theme, Tenant and BasePath are not provided for creating a new docset"
  },
  {
    "code": "CreateGitRepositoryBranchFailed",
    "message": "Creating branch '{0}' based on commit sha '{1}' failed, details: {2}"
  },
  {
    "code": "InvalidBranchName",
    "message": "Branch name '{0}' is invalid, details: {1}. Possible reason is that branch name contains invalid characters: '/, \\, #, ? and control characters"
  },
  {
    "code": "CreateGitRepositoryInitializationFilesNotSupportedForVso",
    "message": "Currently we don't support creating ititializatoin files in Vso repository, please use create repository or import repository instead"
  },
  {
    "code": "ProvisionAlreadyInProcessing",
    "message": "The provision request trigger by you since this repository {0} is already triggered by {1} with status {2}"
  },
  {
    "code": "GitHubOAuthLoginFailed",
    "message": "GitHub OAuth login failed with authorization code {0}. Please retry it later. If the issue still happens, please check the GitHub system status at https://status.github.com/."
  },
  {
    "code": "ProvisionUpdateStepFailed",
    "message": "The provision message process update the step to {1} failed, message id {0}"
  },
  {
    "code": "ProvisionProgressFailed",
    "message": "Provision failed at step {1}, message id: {0}, details: {2}."
  },
  {
    "code": "NullOrEmptyCommitId",
    "message": "The commit id is null or empty with repository id: {0} and branch name: {1}."
  },
  {
    "code": "NoActionTriggeredForDependent",
    "message": "There is no action triggered for repository id: {0} and branch name: {1}."
  },
  {
    "code": "DependencyNotFound",
    "message": "Cannot find dependency with dependent repo id: {0}, dependent branch: {1}, dependency repo url: {2}, dependency branch: {3}."
  },
  {
    "code": "ProvisionStepSkipped",
    "message": "Since no change in step '{0}', execution of step '{0}' will be skipped in provisioning repository: {1}."
  },
  {
    "code": "AADOAuthLoginFailed",
    "message": "AAD OAuth login failed with authorization code {0}. Please retry login later."
  },
  {
    "code": "UnauthorizedAADAccess",
    "message": "AAD authentication credential is missing or incorrect."
  },
  {
    "code": "UserAADExpired",
    "message": "User AAD information is expired on backend."
  },
  {
    "code": "UserDoesNotMatch",
    "message": "User '{0}' can't query ops permission of another id '{1}'."
  },
  {
    "code": "DependencyTableEntityNotFound",
    "message": "Cannot find dependency table entity with repository url: {0}, branch name: {1}."
  },
  {
    "code": "RepositoryNotProvisioned",
    "message": "The repository {0} was not provisioned yet. Please contact Open Publishing Build team <OPBuild@microsoft.com> to provision it first before you create {1} on it."
  },
  {
    "code": "InvalidReferenceToBranchNameParameter",
    "message": "{0} is not a valid referenceTo branch name"
  },
  {
    "code": "CreateOrUpdateDependencyFailed",
    "message": "Failed to create or update dependency with dependent repo id: {0}, dependent branch: {1}, dependency repo url: {2}, dependency branch: {3}."
  },
  {
    "code": "SavePublishingDocsetsInformationFailed",
    "message": "Failed to save publishing docsets information for message id {0}."
  },
  {
    "code": "DuplicatePathInDependentRepositories",
    "message": "Dependent repositories are invalid in publish config: Don't set more than one dependent repositories with same path_to_root. Error path_to_root: {0}. Duplicate url: {1}"
  },
  {
    "code": "NoDependentRepositoryFoundForDocset",
    "message": "No dependent repository with 'path_to_root' value {0} is found for docset {1}."
  },
  {
    "code": "NoGitDocsetFound",
    "message": "Cannot find any docset for repository {0}. Skip provision with reference."
  },
  {
    "code": "GetGitDocsetsFailed",
    "message": "Failed to get docsets from git for repository {0}. Details: {1}."
  },
  {
    "code": "GetOpDocsetsFailed",
    "message": "Failed to get docsets from table for repository {0}. Details: {1}."
  },
  {
    "code": "ErrorHappenedInDependencyMessageGenerate",
    "message": "Error happened when trigger dependency build for repository: {0}. Exception: {1}"
  },
  {
    "code": "DocsetsNotDeletedUnderRepository",
    "message": "Repostiory {0} can not be deleted since its docset(s) {1} haven't been deleted."
  },
  {
    "code": "InvalidBranchesToTriggerBuild",
    "message": "BranchesToTriggerBuild should be null or at least have one branch."
  },
  {
    "code": "RepositoryConfigurationFileNotFound",
    "message": "Configuration file '{0}' is not found in branch '{1}' of repository {2}."
  },
  {
    "code": "DepotAlreadyCreatedInDHS",
    "message": "The following depots '{0}' have already been created, if you still want to create them with other locales, please use 'Duplicate' function, or 'Manage Localized Repos' function in the new portal."
  },
  {
    "code": "TransferRepositoryFailed",
    "message": "Transfer repository failed because of {0} error. Details: {1}."
  },
  {
    "code": "NotSetThemeForDynamicRenderingDepot",
    "message": "Depot {0} is using dynamic rendering. However, can't get theme information from DHS."
  },
  {
    "code": "CannotGetThemeFromDHSByUrl",
    "message": "Can not get theme from DHS by url: {0}"
  },
  {
    "code": "PublishConfigCompareFailed",
    "message": "Error happened when comparing the publish config. Exception:{0}"
  },
  {
    "code": "NotThemeRepository",
    "message": "Repository {0} is not provisioned as theme type. Can't publish content as theme. Actual type: {1}. Theme Id: {2}."
  },
  {
    "code": "ThemeBranchNotExists",
    "message": "Theme {0} doesn't have branch {1}. The published content won't have style."
  },
  {
    "code": "ThemeNotProvisioned",
    "message": "Theme {0} hasn't been provisioned. The published content won't have style."
  },
  {
    "code": "CannotTransferRepositoryToDifferentTypeRepository",
    "message": "Transfer failed. Can't transfer repository to a different type repository. Source repository url: {0}, target repository url:{1}."
  },
  {
    "code": "SourceEntityForTransferingCannotBefound",
    "message": "Transfer failed. That's mostly because of last failed transfering operation. Please contact Open Publishing Build team <OPBuild@microsoft.com> for help.  Details: Source entity can't be found in {0} with key {1}."
  },
  {
    "code": "TargetEntityAlreadyExists",
    "message": "Can't transfer to an existed provisioned repository. Details: Target entity in {0} with key {1} already exists and can't transfer the source entity to that."
  },
  {
    "code": "CloneSourceEntityFailed",
    "message": "Transfer failed, please try again. Details: Clone source entity of {0} with key {1} failed."
  },
  {
    "code": "InsertTransferTargetEntityFailed",
    "message": "Transfer failed, please try again. Details: Insert target entity in {0} with key {1} failed."
  },
  {
    "code": "SyncPairIdCannotBeFound",
    "message": "Transfer failed, please try again. Details: sync pair id: {0} can't be found in sync pair table entity. transferred repository with id: {1} can't do sync operation."
  },
  {
    "code": "UpdateRepositoryServiceAccountsFailed",
    "message": "Update repository {0}'s service accounts to repository table failed"
  },
  {
    "code": "DuplicateRedirectionEntries",
    "message": "There are duplicated entries for source_path '{0}' in redirection mapping file."
  },
  {
    "code": "SourcePathIsNullOrEmpty",
    "message": "source_path for redirect_url '{0}' is null or empty."
  },
  {
    "code": "RedirectUrlIsNullOrEmpty",
    "message": "redirect_url for source_path '{0}' is null or empty."
  },
  {
    "code": "SourcePathIsAboveRootPath",
    "message": "source_path '{0}' is above the root path '{1}'."
  },
  {
    "code": "GeneratingRedirectionFileFailed",
    "message": "Generating redirection file '{0}' failed, exception details: {1}."
  },
  {
    "code": "DeletingRedirectionFileFailed",
    "message": "Deleting redirection file '{0}' failed, exception details: {1}."
  },
  {
    "code": "NoRedirectionEntryFound",
    "message": "No redirection entry is found in {0}redirection mapping file."
  },
  {
    "code": "SetDefaultMasterRedirectionFilePath",
    "message": "Default master redirection file is located in '{0}'."
  },
  {
    "code": "SetDefaultCachedMasterRedirectionFilePath",
    "message": "Default cached master redirection file is located in '{0}'."
  },
  {
    "code": "SetDefaultChangeListTsvFilePath",
    "message": "Default change list tsv file is located in '{0}'."
  },
  {
    "code": "MergeRedirectionChangeFilesIntoTsvFile",
    "message": "Merge {0} changed redirection files into git change list tsv file."
  },
  {
    "code": "ClearCachedMasterRedirectionFile",
    "message": "Master redirection file '{0}' doesn't exist and clear the cache file '{1}'."
  },
  {
    "code": "RedirectionFileDeleted",
    "message": "redirection file '{0}' is deleted."
  },
  {
    "code": "RedirectionFileCreated",
    "message": "redirection file '{0}' is created with redirect_url '{1}''{2}'."
  },
  {
    "code": "RedirectionFileAlreadyExists",
    "message": "'{0}' would be overwritten by redirection rule configured in master redirection file {1}. Please remove the original file to resolve this warning."
  },
  {
    "code": "DynamicRenderingPublishForDocset",
    "message": "Docset '{0}' is dynamic rendering, won't publish theme resources."
  },
  {
    "code": "FileNotExists",
    "message": "'{0}' does not exist."
  },
  {
    "code": "DynamicDocsetProvisionFailedWithNotExistedTheme",
    "message": "Dynamic docset {0} can't provision because of theme {1} doesn't exist."
  },
  {
    "code": "NoCreateRepositoryToSpecialOrgAdminUserId",
    "message": "There is no org admin user id in config"
  },
  {
    "code": "UserNotFoundInGit",
    "message": "Cannot find user {0} in {1}"
  },
  {
    "code": "UserNotFoundInOpenPublishingSystem",
    "message": "Can't find user: {0} in OPS system. Please log on op portal by visiting {1} at first."
  },
  {
    "code": "TeamNotFoundInGit",
    "message": "Cannot find team {0} in org {1} under {2}"
  },
  {
    "code": "CheckMonikers",
    "message": "Check monikers {0} of depot {1}."
  },
  {
    "code": "CheckMonikerRanges",
    "message": "Check moniker ranges {0} of depot {1}."
  },
  {
    "code": "MonikerRangeCandidateMonikers",
    "message": "Moniker range {0} candidate monikers {1}."
  },
  {
    "code": "MonikerRangeActualMonikers",
    "message": "Moniker range {0} actual monikers {1}."
  },
  {
    "code": "DeleteBranchMonikers",
    "message": "Delete branch monikers {0} of depot {1} on branch {2}."
  },
  {
    "code": "DeleteBranchMonikerRanges",
    "message": "Delete branch moniker ranges {0} of depot {1} on branch {2}."
  },
  {
    "code": "PublishMonikers",
    "message": "Publish monikers '{0}' to DHS depot: {1}, branch: {2}, locale: {3}. Entire monikers this time: '{4}'. Entire monikers in DHS: '{5}'"
  },
  {
    "code": "PublishMonikerRange",
    "message": "Publish moniker range '{0}' with monikers {1} to DHS."
  },
  {
    "code": "PublishDepotMonikerRanges",
    "message": "Publish moniker ranges '{0}' to DHS depot: {1}, branch: {2}, locale: {3}. Entire moniker ranges this time: '{4}'. Entire moniker ranges in DHS: '{5}'"
  },
  {
    "code": "DeleteMonikers",
    "message": "Delete monikers '{0}' in DHS depot: {1}, branch: {2}, locale {3}."
  },
  {
    "code": "DeleteMonikerRanges",
    "message": "Delete moniker ranges '{0}' in DHS depot: {1}, branch: {2}, locale {3}."
  },
  {
    "code": "TeamAlreadyExistInOrg",
    "message": "The team {0} already exists in org {1}. May be you don't have permission to get in, please contact the org admin."
  },
  {
    "code": "BuildToCancelNotFound",
    "message": "Build task with repository id '{0}' and build id '{1}' can't be found. Can't cancel that."
  },
  {
    "code": "MessageInProcessingNotFoundOrNotRunning",
    "message": "Message with repository id '{0}' and build id '{1}' can't be found in processing table. Or it is not in processing. Can't cancel that."
  },
  {
    "code": "CannotCancelFinishedBuild",
    "message": "Current build status is '{0}' which indicates it has finished. Can't do cancel operation on that."
  },
  {
    "code": "SyncLimitToGitHub",
    "message": "Sync scenario is limited on GitHub repository now. Current set repo1: {0}, repo2: {1}."
  },
  {
    "code": "SyncPermissionInsufficient",
    "message": "Sync strategy '{0}' need user at least has '{1}' permission to repository '{2}'. Actually, user has '{3}' permission."
  },
  {
    "code": "NotSupportedSyncRepoFileAction",
    "message": "Not supported sync repository file action: {0}."
  },
  {
    "code": "SyncRepoFileFailed",
    "message": "Sync repository file failed. Reason: {0}."
  },
  {
    "code": "InvalidGitContentUrl",
    "message": "Content git url: {0} is neither a valid GitHub url nor a valid VSO url."
  },
  {
    "code": "NonRelativePath",
    "message": "Data_source_path: {0} in request is not a relative path."
  },
  {
    "code": "RenderWithoutContentUrlNotImplemented",
    "message": "Render without content url function hasn't been implemented. Please provide content url."
  },
  {
    "code": "TransferTeamsFailed",
    "message": "Transfer teams failed, for details: {0}."
  },
  {
    "code": "MonikerNotFound",
    "message": "Moniker {0} mentioned in moniker range {1} can't be found in moniker candidates."
  },
  {
    "code": "MonikerNotExists",
    "message": "Moniker {0} doesn't exist in moniker service. Depot {1} content won't be published."
  },
  {
    "code": "MonikerCheckFailed",
    "message": "Depot {0} moniker check failed for monikers {1}. Exception {2}."
  },
  {
    "code": "MonikerRangeNotExists",
    "message": "Moniker range {0} doesn't exist. Depot {1} publish will fail."
  },
  {
    "code": "MonikerRangeCheckFailed",
    "message": "Depot {0} moniker range check failed for moniker ranges {1}. Exception {2}."
  },
  {
    "code": "MonikerRangeOverlap",
    "message": "Docset {0} moniker ranges {1} are overlapping."
  },
  {
    "code": "MonikerRangeMentionedMonikerNotExist",
    "message": "Moniker {0} mentioned in moniker range {1} doesn't exist in moniker service. Depot {2} content won't be published"
  },
  {
    "code": "MonikersAndMonikerRangesConflict",
    "message": "Docset {0} can't set monikers and moniker_ranges at the same time. Please remove one of them in .openpublishing.publish.config.json file."
  },
  {
    "code": "MonikerCandidatesEmpty",
    "message": "The whole moniker candidates is empty. Can't resolve moniker range."
  },
  {
    "code": "BuildPermissionInsufficientError",
    "message": "Neither service account {0} nor fallback account {1} have 'Read' permission to this repo, so the build could not be executed. Grant at least one of the accounts to the repo 'Read' permission, retry the build again."
  },
  {
    "code": "PRCommentsPermissionInsufficientError",
    "message": "Neither service account {0} nor fallback account {1} have 'Write' permission to this repo, so the PR could not be executed. Grant at least one of the accounts to the repo 'Write' permission, close the PR and submit it again."
  },
  {
    "code": "UserAccountBuildPermissionInsufficientError",
    "message": "User account {1} does not have 'Read' permission to this repo, so the build could not be executed. Grant the account to the repo 'Read' permission, retry the build again."
  },
  {
    "code": "UserAccountPRCommentsPermissionInsufficientError",
    "message": "User account {1} does not have 'Write' permission to this repo, so the PR could not be executed. Grant the account to the repo 'Write' permission, close the PR and submit it again."
  },
  {
    "code": "TaskCompleted",
    "message": "{0} completed in {1} seconds, additional information: {2}."
  },
  {
    "code": "TransferStep",
    "message": "Run transfer step '{0}' starts."
  },
  {
    "code": "TransferRepositoryStatus",
    "message": "Transfer repository status: {0}. Response: {1}"
  },
  {
    "code": "TransferWebhookStatus",
    "message": "Transfer webhook status: {0}."
  },
  {
    "code": "UpdateRepositoryTableEntityFailed",
    "message": "Update repository {0} to repository table failed"
  },
  {
    "code": "NotSupportedTransferPersonalRepositoryOwner",
    "message": "Current we don't support to transfer personal repository's owner for repository: {0}"
  },
  {
    "code": "NotSupportedTransferRepositoryOwnerForVso",
    "message": "Currently we don't support to transfer reposiotry owner for Vso."
  },
  {
    "code": "SkipPackageDownloading",
    "message": "SkipPackageDownloading flag for {0} package is {1}."
  },
  {
    "code": "NullOrEmptySkipPackageDownloadingString",
    "message": "SkipPackageDownloadingString is null or empty."
  },
  {
    "code": "SkipSyncRepoFile",
    "message": "Skip {0} repository file. Reason: {1}"
  },
  {
    "code": "SkipSyncRepoFileStep",
    "message": "Skip {0} repository file step {1}. Reason: {2}"
  },
  {
    "code": "AddSystemServiceAccountFailed",
    "message": "Add system defined service account to repository {0} failed, details: {1}"
  },
  {
    "code": "RepositoryShouldBeUnderSpecialOrgs",
    "message": "The current repository org: {0} should be under the orgs: {1}"
  },
  {
    "code": "AbortWithDocumentError",
    "message": "OP build will abort execution when there is any doucument error."
  },
  {
    "code": "SyncFilesCount",
    "message": "Sync {0} files to folder {1} with search patterns {2}."
  },
  {
    "code": "NoDocumentNeedsToBeDeleted",
    "message": "No document needs to be deleted this time."
  },
  {
    "code": "AccountReadPermissionInsufficient",
    "message": "{0} have no read permission to repository {1}."
  },
  {
    "code": "AccountWritePermissionInsufficient",
    "message": "{0} have no write permission to repository {1}."
  },
  {
    "code": "NoneSystemDefinedServiceAccountForSync",
    "message": "None system defined service account for sync."
  }
]